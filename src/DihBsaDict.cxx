//
// File generated by rootcint at Thu Apr 18 10:26:56 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME DihBsaDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DihBsaDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void DIS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DIS(void *p = 0);
   static void *newArray_DIS(Long_t size, void *p);
   static void delete_DIS(void *p);
   static void deleteArray_DIS(void *p);
   static void destruct_DIS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DIS*)
   {
      ::DIS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DIS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DIS", ::DIS::Class_Version(), "./DIS.h", 25,
                  typeid(::DIS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DIS::Dictionary, isa_proxy, 4,
                  sizeof(::DIS) );
      instance.SetNew(&new_DIS);
      instance.SetNewArray(&newArray_DIS);
      instance.SetDelete(&delete_DIS);
      instance.SetDeleteArray(&deleteArray_DIS);
      instance.SetDestructor(&destruct_DIS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DIS*)
   {
      return GenerateInitInstanceLocal((::DIS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DIS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Trajectory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Trajectory(void *p);
   static void deleteArray_Trajectory(void *p);
   static void destruct_Trajectory(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Trajectory*)
   {
      ::Trajectory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Trajectory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Trajectory", ::Trajectory::Class_Version(), "./Trajectory.h", 26,
                  typeid(::Trajectory), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Trajectory::Dictionary, isa_proxy, 4,
                  sizeof(::Trajectory) );
      instance.SetDelete(&delete_Trajectory);
      instance.SetDeleteArray(&deleteArray_Trajectory);
      instance.SetDestructor(&destruct_Trajectory);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Trajectory*)
   {
      return GenerateInitInstanceLocal((::Trajectory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Trajectory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Dihadron_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Dihadron(void *p = 0);
   static void *newArray_Dihadron(Long_t size, void *p);
   static void delete_Dihadron(void *p);
   static void deleteArray_Dihadron(void *p);
   static void destruct_Dihadron(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Dihadron*)
   {
      ::Dihadron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Dihadron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Dihadron", ::Dihadron::Class_Version(), "./Dihadron.h", 30,
                  typeid(::Dihadron), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Dihadron::Dictionary, isa_proxy, 4,
                  sizeof(::Dihadron) );
      instance.SetNew(&new_Dihadron);
      instance.SetNewArray(&newArray_Dihadron);
      instance.SetDelete(&delete_Dihadron);
      instance.SetDeleteArray(&deleteArray_Dihadron);
      instance.SetDestructor(&destruct_Dihadron);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Dihadron*)
   {
      return GenerateInitInstanceLocal((::Dihadron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Dihadron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr DIS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DIS::Class_Name()
{
   return "DIS";
}

//______________________________________________________________________________
const char *DIS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DIS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DIS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DIS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DIS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DIS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DIS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DIS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Trajectory::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Trajectory::Class_Name()
{
   return "Trajectory";
}

//______________________________________________________________________________
const char *Trajectory::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Trajectory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Trajectory::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Trajectory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Trajectory::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Trajectory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Trajectory::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Trajectory*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Dihadron::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Dihadron::Class_Name()
{
   return "Dihadron";
}

//______________________________________________________________________________
const char *Dihadron::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Dihadron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Dihadron::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Dihadron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Dihadron::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Dihadron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Dihadron::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Dihadron*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void DIS::Streamer(TBuffer &R__b)
{
   // Stream an object of class DIS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DIS::Class(),this);
   } else {
      R__b.WriteClassBuffer(DIS::Class(),this);
   }
}

//______________________________________________________________________________
void DIS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DIS.
      TClass *R__cl = ::DIS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamEn", &BeamEn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "W", &W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Q2", &Q2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nu", &Nu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X", &X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BreitBoost", &BreitBoost);
      R__insp.InspectMember(BreitBoost, "BreitBoost.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "debug", &debug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "speedup", &speedup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecBeam", &vecBeam);
      R__insp.InspectMember(vecBeam, "vecBeam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecTarget", &vecTarget);
      R__insp.InspectMember(vecTarget, "vecTarget.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecElectron", &vecElectron);
      R__insp.InspectMember(vecElectron, "vecElectron.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecW", &vecW);
      R__insp.InspectMember(vecW, "vecW.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecQ", &vecQ);
      R__insp.InspectMember(vecQ, "vecQ.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecBreit", &vecBreit);
      R__insp.InspectMember(vecBreit, "vecBreit.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "breitBeam", &breitBeam);
      R__insp.InspectMember(breitBeam, "breitBeam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "breitTarget", &breitTarget);
      R__insp.InspectMember(breitTarget, "breitTarget.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "breitElectron", &breitElectron);
      R__insp.InspectMember(breitElectron, "breitElectron.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "breitW", &breitW);
      R__insp.InspectMember(breitW, "breitW.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "breitQ", &breitQ);
      R__insp.InspectMember(breitQ, "breitQ.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DIS(void *p) {
      return  p ? new(p) ::DIS : new ::DIS;
   }
   static void *newArray_DIS(Long_t nElements, void *p) {
      return p ? new(p) ::DIS[nElements] : new ::DIS[nElements];
   }
   // Wrapper around operator delete
   static void delete_DIS(void *p) {
      delete ((::DIS*)p);
   }
   static void deleteArray_DIS(void *p) {
      delete [] ((::DIS*)p);
   }
   static void destruct_DIS(void *p) {
      typedef ::DIS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DIS

//______________________________________________________________________________
void Trajectory::Streamer(TBuffer &R__b)
{
   // Stream an object of class Trajectory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Trajectory::Class(),this);
   } else {
      R__b.WriteClassBuffer(Trajectory::Class(),this);
   }
}

//______________________________________________________________________________
void Trajectory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Trajectory.
      TClass *R__cl = ::Trajectory::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Idx", &Idx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vec", &Vec);
      R__insp.InspectMember(Vec, "Vec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "debug", &debug);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_Trajectory(void *p) {
      delete ((::Trajectory*)p);
   }
   static void deleteArray_Trajectory(void *p) {
      delete [] ((::Trajectory*)p);
   }
   static void destruct_Trajectory(void *p) {
      typedef ::Trajectory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Trajectory

//______________________________________________________________________________
void Dihadron::Streamer(TBuffer &R__b)
{
   // Stream an object of class Dihadron.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Dihadron::Class(),this);
   } else {
      R__b.WriteClassBuffer(Dihadron::Class(),this);
   }
}

//______________________________________________________________________________
void Dihadron::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Dihadron.
      TClass *R__cl = ::Dihadron::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "debug", &debug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hadron[2]", &hadron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*disEv", &disEv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecHad[2]", vecHad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecPh", &vecPh);
      R__insp.InspectMember(vecPh, "vecPh.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecR", &vecR);
      R__insp.InspectMember(vecR, "vecR.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vecMmiss", &vecMmiss);
      R__insp.InspectMember(vecMmiss, "vecMmiss.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bvecPh", &bvecPh);
      R__insp.InspectMember(bvecPh, "bvecPh.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiR", &phiR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiH", &phiH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z[2]", z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpair", &zpair);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mh", &Mh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mmiss", &Mmiss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xF", &xF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "h", &h);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pQ", &pQ);
      R__insp.InspectMember(pQ, "pQ.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pL", &pL);
      R__insp.InspectMember(pL, "pL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pPh", &pPh);
      R__insp.InspectMember(pPh, "pPh.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pR", &pR);
      R__insp.InspectMember(pR, "pR.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pRperp", &pRperp);
      R__insp.InspectMember(pRperp, "pRperp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pHad[2]", pHad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pHadPerp[2]", pHadPerp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crossQL", &crossQL);
      R__insp.InspectMember(crossQL, "crossQL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crossQPh", &crossQPh);
      R__insp.InspectMember(crossQPh, "crossQPh.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crossQRperp", &crossQRperp);
      R__insp.InspectMember(crossQRperp, "crossQRperp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sgnH", &sgnH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sgnR", &sgnR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numerH", &numerH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "denomH", &denomH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numerR", &numerR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "denomR", &denomR);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Dihadron(void *p) {
      return  p ? new(p) ::Dihadron : new ::Dihadron;
   }
   static void *newArray_Dihadron(Long_t nElements, void *p) {
      return p ? new(p) ::Dihadron[nElements] : new ::Dihadron[nElements];
   }
   // Wrapper around operator delete
   static void delete_Dihadron(void *p) {
      delete ((::Dihadron*)p);
   }
   static void deleteArray_Dihadron(void *p) {
      delete [] ((::Dihadron*)p);
   }
   static void destruct_Dihadron(void *p) {
      typedef ::Dihadron current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Dihadron

/********************************************************
* DihBsaDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDihBsaDict();

extern "C" void G__set_cpp_environmentDihBsaDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Constants.h");
  G__add_compiledheader("DIS.h");
  G__add_compiledheader("Trajectory.h");
  G__add_compiledheader("Dihadron.h");
  G__cpp_reset_tagtableDihBsaDict();
}
#include <new>
extern "C" int G__cpp_dllrevDihBsaDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DIS */
static int G__DihBsaDict_629_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DIS* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DIS[n];
     } else {
       p = new((void*) gvp) DIS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DIS;
     } else {
       p = new((void*) gvp) DIS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DihBsaDictLN_DIS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DIS*) G__getstructoffset())->SetBeamEn((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DIS*) G__getstructoffset())->SetElectron((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DIS*) G__getstructoffset())->Analyse();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DIS*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DIS*) G__getstructoffset())->BreitPrint();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DIS*) G__getstructoffset())->ComputeBreitKinematics();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DIS*) G__getstructoffset())->ResetVars();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DIS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DIS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DIS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DIS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DIS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DIS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DIS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DIS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_629_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DIS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DihBsaDict_629_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DIS* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DIS(*(DIS*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DihBsaDictLN_DIS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DIS G__TDIS;
static int G__DihBsaDict_629_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DIS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DIS*) (soff+(sizeof(DIS)*i)))->~G__TDIS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DIS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DIS*) (soff))->~G__TDIS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DihBsaDict_629_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DIS* dest = (DIS*) G__getstructoffset();
   *dest = *(DIS*) libp->para[0].ref;
   const DIS& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Trajectory */
static int G__DihBsaDict_630_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Trajectory* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Trajectory((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Trajectory((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DihBsaDictLN_Trajectory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Trajectory*) G__getstructoffset())->SetMomentum((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((Trajectory*) G__getstructoffset())->Name();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((Trajectory*) G__getstructoffset())->Title();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Trajectory*) G__getstructoffset())->PID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Trajectory*) G__getstructoffset())->Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Trajectory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Trajectory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Trajectory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Trajectory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Trajectory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Trajectory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Trajectory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Trajectory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_630_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Trajectory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DihBsaDict_630_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Trajectory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Trajectory(*(Trajectory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DihBsaDictLN_Trajectory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Trajectory G__TTrajectory;
static int G__DihBsaDict_630_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Trajectory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Trajectory*) (soff+(sizeof(Trajectory)*i)))->~G__TTrajectory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Trajectory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Trajectory*) (soff))->~G__TTrajectory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DihBsaDict_630_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Trajectory* dest = (Trajectory*) G__getstructoffset();
   *dest = *(Trajectory*) libp->para[0].ref;
   const Trajectory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Dihadron */
static int G__DihBsaDict_631_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Dihadron* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Dihadron[n];
     } else {
       p = new((void*) gvp) Dihadron[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Dihadron;
     } else {
       p = new((void*) gvp) Dihadron;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DihBsaDictLN_Dihadron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dihadron*) G__getstructoffset())->SetEvent((Trajectory*) G__int(libp->para[0]), (Trajectory*) G__int(libp->para[1])
, (DIS*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dihadron*) G__getstructoffset())->ComputeAngles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Dihadron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dihadron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Dihadron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Dihadron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Dihadron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dihadron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Dihadron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Dihadron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DihBsaDict_631_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Dihadron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DihBsaDict_631_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Dihadron* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Dihadron(*(Dihadron*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DihBsaDictLN_Dihadron));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Dihadron G__TDihadron;
static int G__DihBsaDict_631_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Dihadron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Dihadron*) (soff+(sizeof(Dihadron)*i)))->~G__TDihadron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Dihadron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Dihadron*) (soff))->~G__TDihadron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DihBsaDict_631_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Dihadron* dest = (Dihadron*) G__getstructoffset();
   *dest = *(Dihadron*) libp->para[0].ref;
   const Dihadron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DIS */

/* Trajectory */

/* Dihadron */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDihBsaDict {
 public:
  G__Sizep2memfuncDihBsaDict(): p(&G__Sizep2memfuncDihBsaDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDihBsaDict::*p)();
};

size_t G__get_sizep2memfuncDihBsaDict()
{
  G__Sizep2memfuncDihBsaDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDihBsaDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DihBsaDictLN_DIS))) {
     DIS *G__Lderived;
     G__Lderived=(DIS*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DihBsaDictLN_DIS),G__get_linked_tagnum(&G__DihBsaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DihBsaDictLN_Trajectory))) {
     Trajectory *G__Lderived;
     G__Lderived=(Trajectory*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DihBsaDictLN_Trajectory),G__get_linked_tagnum(&G__DihBsaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DihBsaDictLN_Dihadron))) {
     Dihadron *G__Lderived;
     G__Lderived=(Dihadron*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DihBsaDictLN_Dihadron),G__get_linked_tagnum(&G__DihBsaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDihBsaDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DihBsaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DihBsaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DihBsaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DihBsaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DihBsaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DihBsaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DihBsaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DihBsaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DihBsaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DihBsaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__DihBsaDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DihBsaDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DihBsaDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DihBsaDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DihBsaDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DihBsaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DihBsaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DihBsaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DihBsaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DihBsaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DihBsaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DihBsaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DihBsaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DihBsaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DihBsaDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DIS */
static void G__setup_memvarDIS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DihBsaDictLN_DIS));
   { DIS *p; p=(DIS*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->BeamEn)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"BeamEn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->W)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"W=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Q2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Q2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nu)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Nu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BreitBoost)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,1,"BreitBoost=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->debug)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"debug=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->speedup)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"speedup=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vecBeam)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"vecBeam=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vecTarget)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"vecTarget=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vecElectron)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"vecElectron=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vecW)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"vecW=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vecQ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"vecQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vecBreit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"vecBreit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->breitBeam)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"breitBeam=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->breitTarget)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"breitTarget=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->breitElectron)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"breitElectron=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->breitW)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"breitW=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->breitQ)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"breitQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Trajectory */
static void G__setup_memvarTrajectory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DihBsaDictLN_Trajectory));
   { Trajectory *p; p=(Trajectory*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Idx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Idx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"Vec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->debug)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"debug=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Dihadron */
static void G__setup_memvarDihadron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DihBsaDictLN_Dihadron));
   { Dihadron *p; p=(Dihadron*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->debug)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"debug=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DihBsaDictLN_DihadroncLcLplusminus),-1,-2,1,G__FastAllocString(2048).Format("hP=%lldLL",(long long)Dihadron::hP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DihBsaDictLN_DihadroncLcLplusminus),-1,-2,1,G__FastAllocString(2048).Format("hM=%lldLL",(long long)Dihadron::hM).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hadron)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_Trajectory),-1,-1,1,"hadron[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->disEv)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_DIS),-1,-1,1,"disEv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vecHad)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"vecHad[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vecPh)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"vecPh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vecR)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"vecR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vecMmiss)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"vecMmiss=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bvecPh)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TLorentzVector),-1,-1,1,"bvecPh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phiR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"phiR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phiH)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"phiH=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"z[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zpair)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"zpair=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mh)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Mh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mmiss)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Mmiss=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"xF=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"h=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,4,"pQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,4,"pL=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,4,"pPh=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,4,"pR=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,4,"pRperp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,4,"pHad[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,4,"pHadPerp[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,4,"crossQL=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,4,"crossQPh=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TVector3),-1,-1,4,"crossQRperp=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"sgnH=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"sgnR=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"numerH=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"denomH=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"numerR=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"denomR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DihBsaDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDihBsaDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDIS(void) {
   /* DIS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DihBsaDictLN_DIS));
   G__memfunc_setup("DIS",224,G__DihBsaDict_629_0_1, 105, G__get_linked_tagnum(&G__DihBsaDictLN_DIS), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeamEn",852,G__DihBsaDict_629_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - newBeamEn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetElectron",1128,G__DihBsaDict_629_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - px f - 'Float_t' 0 - py "
"f - 'Float_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Analyse",717,G__DihBsaDict_629_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__DihBsaDict_629_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BreitPrint",1027,G__DihBsaDict_629_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeBreitKinematics",2267,G__DihBsaDict_629_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetVars",927,G__DihBsaDict_629_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DihBsaDict_629_0_9, 85, G__get_linked_tagnum(&G__DihBsaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DIS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DihBsaDict_629_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DIS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DihBsaDict_629_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DIS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DihBsaDict_629_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DIS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DihBsaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DihBsaDict_629_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DihBsaDict_629_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DIS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DihBsaDict_629_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DIS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DihBsaDict_629_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DIS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DihBsaDict_629_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DIS::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DIS", 224, G__DihBsaDict_629_0_21, (int) ('i'), G__get_linked_tagnum(&G__DihBsaDictLN_DIS), -1, 0, 1, 1, 1, 0, "u 'DIS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DIS", 350, G__DihBsaDict_629_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DihBsaDict_629_0_23, (int) ('u'), G__get_linked_tagnum(&G__DihBsaDictLN_DIS), -1, 1, 1, 1, 1, 0, "u 'DIS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrajectory(void) {
   /* Trajectory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DihBsaDictLN_Trajectory));
   G__memfunc_setup("Trajectory",1063,G__DihBsaDict_630_0_1, 105, G__get_linked_tagnum(&G__DihBsaDictLN_Trajectory), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - particle_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__DihBsaDict_630_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - px f - 'Float_t' 0 - py "
"f - 'Float_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Name",385,G__DihBsaDict_630_0_3, 117, G__get_linked_tagnum(&G__DihBsaDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Title",514,G__DihBsaDict_630_0_4, 117, G__get_linked_tagnum(&G__DihBsaDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PID",221,G__DihBsaDict_630_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass",404,G__DihBsaDict_630_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DihBsaDict_630_0_7, 85, G__get_linked_tagnum(&G__DihBsaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Trajectory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DihBsaDict_630_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Trajectory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DihBsaDict_630_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Trajectory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DihBsaDict_630_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Trajectory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DihBsaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DihBsaDict_630_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DihBsaDict_630_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Trajectory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DihBsaDict_630_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Trajectory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DihBsaDict_630_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Trajectory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DihBsaDict_630_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Trajectory::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Trajectory", 1063, G__DihBsaDict_630_0_19, (int) ('i'), G__get_linked_tagnum(&G__DihBsaDictLN_Trajectory), -1, 0, 1, 1, 1, 0, "u 'Trajectory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Trajectory", 1189, G__DihBsaDict_630_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DihBsaDict_630_0_21, (int) ('u'), G__get_linked_tagnum(&G__DihBsaDictLN_Trajectory), -1, 1, 1, 1, 1, 0, "u 'Trajectory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDihadron(void) {
   /* Dihadron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DihBsaDictLN_Dihadron));
   G__memfunc_setup("Dihadron",809,G__DihBsaDict_631_0_1, 105, G__get_linked_tagnum(&G__DihBsaDictLN_Dihadron), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEvent",814,G__DihBsaDict_631_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'Trajectory' - 0 - trajPlus U 'Trajectory' - 0 - trajMinus "
"U 'DIS' - 0 - disEv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeAngles",1335,G__DihBsaDict_631_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DihBsaDict_631_0_4, 85, G__get_linked_tagnum(&G__DihBsaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Dihadron::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DihBsaDict_631_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dihadron::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DihBsaDict_631_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Dihadron::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DihBsaDict_631_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Dihadron::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DihBsaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DihBsaDict_631_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DihBsaDict_631_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dihadron::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DihBsaDict_631_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Dihadron::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DihBsaDict_631_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Dihadron::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DihBsaDict_631_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Dihadron::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Dihadron", 809, G__DihBsaDict_631_0_16, (int) ('i'), G__get_linked_tagnum(&G__DihBsaDictLN_Dihadron), -1, 0, 1, 1, 1, 0, "u 'Dihadron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Dihadron", 935, G__DihBsaDict_631_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DihBsaDict_631_0_18, (int) ('u'), G__get_linked_tagnum(&G__DihBsaDictLN_Dihadron), -1, 1, 1, 1, 1, 0, "u 'Dihadron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDihBsaDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDihBsaDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDihBsaDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DihBsaDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DihBsaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_DIS = { "DIS" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_Trajectory = { "Trajectory" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_Dihadron = { "Dihadron" , 99 , -1 };
G__linked_taginfo G__DihBsaDictLN_DihadroncLcLplusminus = { "Dihadron::plusminus" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDihBsaDict() {
  G__DihBsaDictLN_TClass.tagnum = -1 ;
  G__DihBsaDictLN_TBuffer.tagnum = -1 ;
  G__DihBsaDictLN_TMemberInspector.tagnum = -1 ;
  G__DihBsaDictLN_TObject.tagnum = -1 ;
  G__DihBsaDictLN_TString.tagnum = -1 ;
  G__DihBsaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__DihBsaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DihBsaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DihBsaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DihBsaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DihBsaDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__DihBsaDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DihBsaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DihBsaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DihBsaDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DihBsaDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DihBsaDictLN_TVector3.tagnum = -1 ;
  G__DihBsaDictLN_TLorentzVector.tagnum = -1 ;
  G__DihBsaDictLN_DIS.tagnum = -1 ;
  G__DihBsaDictLN_Trajectory.tagnum = -1 ;
  G__DihBsaDictLN_Dihadron.tagnum = -1 ;
  G__DihBsaDictLN_DihadroncLcLplusminus.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDihBsaDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TString);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DihBsaDictLN_DIS),sizeof(DIS),-1,292096,(char*)NULL,G__setup_memvarDIS,G__setup_memfuncDIS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DihBsaDictLN_Trajectory),sizeof(Trajectory),-1,324608,(char*)NULL,G__setup_memvarTrajectory,G__setup_memfuncTrajectory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DihBsaDictLN_Dihadron),sizeof(Dihadron),-1,292096,(char*)NULL,G__setup_memvarDihadron,G__setup_memfuncDihadron);
   G__get_linked_tagnum_fwd(&G__DihBsaDictLN_DihadroncLcLplusminus);
}
extern "C" void G__cpp_setupDihBsaDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDihBsaDict()");
  G__set_cpp_environmentDihBsaDict();
  G__cpp_setup_tagtableDihBsaDict();

  G__cpp_setup_inheritanceDihBsaDict();

  G__cpp_setup_typetableDihBsaDict();

  G__cpp_setup_memvarDihBsaDict();

  G__cpp_setup_memfuncDihBsaDict();
  G__cpp_setup_globalDihBsaDict();
  G__cpp_setup_funcDihBsaDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDihBsaDict();
  return;
}
class G__cpp_setup_initDihBsaDict {
  public:
    G__cpp_setup_initDihBsaDict() { G__add_setup_func("DihBsaDict",(G__incsetup)(&G__cpp_setupDihBsaDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDihBsaDict() { G__remove_setup_func("DihBsaDict"); }
};
G__cpp_setup_initDihBsaDict G__cpp_setup_initializerDihBsaDict;

